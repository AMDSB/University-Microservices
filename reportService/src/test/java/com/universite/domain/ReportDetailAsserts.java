package com.universite.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReportDetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDetailAllPropertiesEquals(ReportDetail expected, ReportDetail actual) {
        assertReportDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertReportDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDetailAllUpdatablePropertiesEquals(ReportDetail expected, ReportDetail actual) {
        assertReportDetailUpdatableFieldsEquals(expected, actual);
        assertReportDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDetailAutoGeneratedPropertiesEquals(ReportDetail expected, ReportDetail actual) {
        assertThat(actual)
            .as("Verify ReportDetail auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDetailUpdatableFieldsEquals(ReportDetail expected, ReportDetail actual) {
        assertThat(actual)
            .as("Verify ReportDetail relevant properties")
            .satisfies(a -> assertThat(a.getModuleName()).as("check moduleName").isEqualTo(expected.getModuleName()))
            .satisfies(a -> assertThat(a.getNumberOfStudents()).as("check numberOfStudents").isEqualTo(expected.getNumberOfStudents()))
            .satisfies(a -> assertThat(a.getNumberPassed()).as("check numberPassed").isEqualTo(expected.getNumberPassed()))
            .satisfies(a -> assertThat(a.getNumberFailed()).as("check numberFailed").isEqualTo(expected.getNumberFailed()))
            .satisfies(a -> assertThat(a.getAverageGrade()).as("check averageGrade").isEqualTo(expected.getAverageGrade()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDetailUpdatableRelationshipsEquals(ReportDetail expected, ReportDetail actual) {
        assertThat(actual)
            .as("Verify ReportDetail relationships")
            .satisfies(a -> assertThat(a.getReport()).as("check report").isEqualTo(expected.getReport()));
    }
}
