package com.universite.module.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpecialisationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialisationAllPropertiesEquals(Specialisation expected, Specialisation actual) {
        assertSpecialisationAutoGeneratedPropertiesEquals(expected, actual);
        assertSpecialisationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialisationAllUpdatablePropertiesEquals(Specialisation expected, Specialisation actual) {
        assertSpecialisationUpdatableFieldsEquals(expected, actual);
        assertSpecialisationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialisationAutoGeneratedPropertiesEquals(Specialisation expected, Specialisation actual) {
        assertThat(actual)
            .as("Verify Specialisation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialisationUpdatableFieldsEquals(Specialisation expected, Specialisation actual) {
        assertThat(actual)
            .as("Verify Specialisation relevant properties")
            .satisfies(a -> assertThat(a.getIdSpecialisation()).as("check idSpecialisation").isEqualTo(expected.getIdSpecialisation()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecialisationUpdatableRelationshipsEquals(Specialisation expected, Specialisation actual) {
        assertThat(actual)
            .as("Verify Specialisation relationships")
            .satisfies(a -> assertThat(a.getIdModule()).as("check idModule").isEqualTo(expected.getIdModule()));
    }
}
