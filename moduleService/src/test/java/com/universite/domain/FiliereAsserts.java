package com.universite.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FiliereAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFiliereAllPropertiesEquals(Filiere expected, Filiere actual) {
        assertFiliereAutoGeneratedPropertiesEquals(expected, actual);
        assertFiliereAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFiliereAllUpdatablePropertiesEquals(Filiere expected, Filiere actual) {
        assertFiliereUpdatableFieldsEquals(expected, actual);
        assertFiliereUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFiliereAutoGeneratedPropertiesEquals(Filiere expected, Filiere actual) {
        assertThat(actual)
            .as("Verify Filiere auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFiliereUpdatableFieldsEquals(Filiere expected, Filiere actual) {
        assertThat(actual)
            .as("Verify Filiere relevant properties")
            .satisfies(a -> assertThat(a.getIdFiliere()).as("check idFiliere").isEqualTo(expected.getIdFiliere()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFiliereUpdatableRelationshipsEquals(Filiere expected, Filiere actual) {
        assertThat(actual)
            .as("Verify Filiere relationships")
            .satisfies(a -> assertThat(a.getIdModule()).as("check idModule").isEqualTo(expected.getIdModule()))
            .satisfies(a -> assertThat(a.getIdDepartement()).as("check idDepartement").isEqualTo(expected.getIdDepartement()))
            .satisfies(a -> assertThat(a.getIdSpecialisation()).as("check idSpecialisation").isEqualTo(expected.getIdSpecialisation()));
    }
}
