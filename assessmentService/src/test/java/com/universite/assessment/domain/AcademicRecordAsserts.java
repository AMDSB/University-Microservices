package com.universite.assessment.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AcademicRecordAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademicRecordAllPropertiesEquals(AcademicRecord expected, AcademicRecord actual) {
        assertAcademicRecordAutoGeneratedPropertiesEquals(expected, actual);
        assertAcademicRecordAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademicRecordAllUpdatablePropertiesEquals(AcademicRecord expected, AcademicRecord actual) {
        assertAcademicRecordUpdatableFieldsEquals(expected, actual);
        assertAcademicRecordUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademicRecordAutoGeneratedPropertiesEquals(AcademicRecord expected, AcademicRecord actual) {
        assertThat(actual)
            .as("Verify AcademicRecord auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademicRecordUpdatableFieldsEquals(AcademicRecord expected, AcademicRecord actual) {
        assertThat(actual)
            .as("Verify AcademicRecord relevant properties")
            .satisfies(a -> assertThat(a.getIdAcademicRecord()).as("check idAcademicRecord").isEqualTo(expected.getIdAcademicRecord()))
            .satisfies(a -> assertThat(a.getMoyenne()).as("check moyenne").isEqualTo(expected.getMoyenne()))
            .satisfies(a -> assertThat(a.getMention()).as("check mention").isEqualTo(expected.getMention()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademicRecordUpdatableRelationshipsEquals(AcademicRecord expected, AcademicRecord actual) {
        // empty method
    }
}
