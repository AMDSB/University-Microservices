package com.universite.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TeacherAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeacherAllPropertiesEquals(Teacher expected, Teacher actual) {
        assertTeacherAutoGeneratedPropertiesEquals(expected, actual);
        assertTeacherAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeacherAllUpdatablePropertiesEquals(Teacher expected, Teacher actual) {
        assertTeacherUpdatableFieldsEquals(expected, actual);
        assertTeacherUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeacherAutoGeneratedPropertiesEquals(Teacher expected, Teacher actual) {
        assertThat(actual)
            .as("Verify Teacher auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeacherUpdatableFieldsEquals(Teacher expected, Teacher actual) {
        assertThat(actual)
            .as("Verify Teacher relevant properties")
            .satisfies(a -> assertThat(a.getIdTeacher()).as("check idTeacher").isEqualTo(expected.getIdTeacher()))
            .satisfies(a -> assertThat(a.getGrade()).as("check grade").isEqualTo(expected.getGrade()))
            .satisfies(a -> assertThat(a.getSpecialite()).as("check specialite").isEqualTo(expected.getSpecialite()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeacherUpdatableRelationshipsEquals(Teacher expected, Teacher actual) {
        assertThat(actual)
            .as("Verify Teacher relationships")
            .satisfies(a -> assertThat(a.getIdDisponibilite()).as("check idDisponibilite").isEqualTo(expected.getIdDisponibilite()));
    }
}
